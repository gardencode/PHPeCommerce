/*

self service users ... major concerns, esp forgot password
Using CAPTCHA

/register/new			... create new account request  (and emails token)
/register/confirm		... confirm email exists
/admin/registrations	... shows list of requests		
/admin/register/token	... approve request #token  --> similar to /member/new

/member/home   			... not really needed if we modify home page

/member/profile			... edit (some) of current logged-in user fields

/admin/members
/admin/member/new
/admin/member/view/n
/admin/member/edit/n
/admin/member/delete/n

*/

/*
/admin/*entities/pages
	members and products need paging and filters
	
	pages is 
		blank ** (all if simple | count if largish) 
		page-n-of-m (which page to show) or 
		n-to-m-of-s (which entities to show)
		need rows per page as parameter
		need paginator bar (max pages as parameter)
		
		new **abstract list** controller
		    a) handles paging
			b) handles get filters
			c) i) SQL = select count(id) from [] [where filter(s)]
			  ii) SQL = select fields from []
				[where filter(s)]
				order by [keys]
				limit and offset auto generated
			d) i) table from field list OR
			  ii) sub-view template
			
			
	
*/

/*
/admin/products
/admin/product/new
/admin/product/view/n
/admin/product/edit/n
/admin/product/delete/n
standard CRUD except:
    a) dropdown for categories
	   i) use dropdown class in lib
    b) upload for picture
       i) extend CRUD with handleOther(postback, action, uri) 
      ii) implement /product/upload/nn for picture
	 iii) use upload class
*/


/*
general public pages

/categories/ 			show list of categories
products?category=n		show list of products

/product/n		page for product n
/order/n

	
	
*/





*/